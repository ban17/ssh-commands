#!/bin/bash
exclude=""
excluded=""

if [ "$1" != "" ]; then
    case $1 in
        -i | -e )
            tmppath=$3
            if [ $# -eq 2 ]; then
                tmppath=$PWD
            fi

            ignore_file_name=".gitignore"
            if [ "$1" == "-e" ];then
                ignore_file_name=".exclude"
            fi


            gitignore="$tmppath/$ignore_file_name"

            if [ -e $gitignore ]; then
                for word in `sed '/^$/d' $gitignore`; do
                    # removing / from beginning if exist
                    if [[ "$word" == "/"* ]]; then
                        word=${word:1:1000}
                    fi
                    exclude="--exclude $word $exclude"
                    excluded="\033[1m\033[31m ::  \033[0m $word  $excluded"
                done
                echo -e "Excluded folders: $excluded"
            else
                echo "Missing ignore file: $ignore_file_name"
            fi
            shift
                  ;;
        -h | --help )
            echo -e "############### PROGRAM FOR SYNCHRONIZATION WITH SERVER OVER SSH ###############
Used for checking differences between locale and remote versions of folder

options
-h - Help - this page
-i - Read ignore rules from .gitignore file
-e - Read ignore rules from .exclude file

There is few files used as aliases for this script:
down   - Checking files on server and show what will be downloaded if we try to sync - this command not downloading files
up     - Checking files in local and show what will be uploaded if we try to sync - this command not uploading files
dooown - Sync using downloading from server for files with differences
uuup   - Sync using uploading to server for files with differences

Usage examples (we are using command 'down' as example but you can use any of rest 3 commands)

# Downloading files from server 'default_server' comparing to same path on server
down

# Downloading files from server  'default_server', compares files from current dir with files in dir '/www/test' on server
down /www/test

# Downloading to current folder from folder '/www/test' on server 'fon'
down /www/test fon

# Downloading to folder '/var/www' in local from folder '/www/test' on server 'fon'
down /var/www fon /www/test2

# Downloading from server 'fon' to locale folder
down \$PWD fon

"
            shift
            exit 1
            ;;
    esac

fi



path=$2
server="default_server"
remote_path=$2

if [ $# -eq 1 ]; then
    path=$PWD
    remote_path=$PWD
fi

if [ $# -gt 2 ]; then
	server=$3
fi

if [ $# -gt 3 ]; then
	remote_path=$4
fi

echo  -e "Local path: \033[41m  ${path} \033[0m  Remote path: \033[45m ${remote_path} \033[0m On server: \033[43m ${server} \033[0m "

if [ ! -d $2 ]; then
	echo "File $path does not exists"
else
	if [ $1 -eq 3 ]; then 
		echo -e "\033[1m\033[31m Upload\n"
		rsync -rvc --exclude .idea  --exclude .git $exclude $path/ $server:$remote_path/
		echo rsync -rvc --exclude .idea  --exclude .git $exclude $path/ $server:$remote_path/
	elif [ $1 -eq 4 ]; then 
		echo -e "\033[1m\033[32m Download\n"
		rsync -rvc --exclude .idea  --exclude .git $exclude $server:$remote_path/ $path/
		echo rsync -rvc --exclude .idea  --exclude .git $exclude $server:$remote_path/ $path/
	elif [ $1 -eq 1 ]; then 
		echo -e "\033[31m Upload\n"
		rsync -rvnc --exclude .idea  --exclude .git $exclude $path/ $server:$remote_path/
		echo rsync -rvnc --exclude .idea  --exclude .git $exclude $path/ $server:$remote_path/
	elif [ $1 -eq 2 ]; then
		echo -e "\033[32m Download\n"
		rsync -rvnc --exclude .idea  --exclude .git $exclude $server:$remote_path/ $path/
		echo rsync -rvnc --exclude .idea  --exclude .git $exclude $server:$remote_path/ $path/
	else
	    echo "Unknown option"
	fi
		echo -e "\033[0m "
fi
